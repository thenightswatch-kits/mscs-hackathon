import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import dynamic from 'next/dynamic'
import Navbar from '../../components/Navbar'
import Footer from '../../components/Footer'
import states from '../../data/states'
import sectors from '../../data/sectors'
import { Grid, GridItem, Spacer, Text, Heading, AccordionPanel, Box, Tabs, TabList, TabPanels, Tab, TabPanel, Select, InputGroup, InputLeftElement, Input, InputLeftAddon, Button, Accordion, AccordionButton, AccordionIcon, AccordionItem } from '@chakra-ui/react';
import {
    FiSearch
} from 'react-icons/fi';
import STable from '../../components/STable'
import sdata from '../../data/data'
import { useEffect, useState } from 'react'
import { fdatasyncSync } from 'fs'
import YearwiseTable from '../../components/YearwiseTable'
import StatewiseTable from '../../components/StatewiseTable'
const inter = Inter({ subsets: ['latin'] })

export default function Home() {
    const [state, setState] = useState<String>('All');
    const [sector, setSector] = useState<String>('All');
    const [search, setSearch] = useState('');
    const [data, setData] = useState<any>(sdata)
    const [filter_data, setFData] = useState<any>(data)

    const handleFilter = () => {
        setFData(data.filter((item: any) => {
            const sectorMatch = sector === "All" || item.sector === sector;
            const stateMatch = state === "All" || item.state === state;
            return sectorMatch && stateMatch;
        }))
    }

    const searchData = (name:string) => {
        setFData(data.filter((n:any) => {
                let d = n.name
                return d.toLowerCase().includes(name.toLowerCase())
        }))
    }

    return (
        <>
            <Head>
                <title>Societies</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={`${styles.main} ${inter.className}`}>
                <Navbar children={undefined} />
                <Box marginLeft={{ base: 0, md: 60 }} minHeight={'100vh'}><Tabs>
                    <TabList>
                        <Tab>All</Tab>
                        <Tab>Year-wise</Tab>
                        <Tab>State-wise</Tab>
                    </TabList>

                    <TabPanels>
                        <TabPanel>
                            <Box>
                                <Box display={'flex'} padding={4} flexDirection={'row'} alignItems={'start'} justifyContent={'space-between'}>
                                    <Box display={'flex'} flexDirection={'row'} width={'100%'} alignItems={'center'}>
                                    <Accordion allowToggle width={{ base: '40%', md: '25%' }}>
                                        <AccordionItem >
                                            <h2>
                                                <AccordionButton>
                                                    <Box as="span" flex='1' textAlign='left'>
                                                        Filter
                                                    </Box>
                                                    <AccordionIcon />
                                                </AccordionButton>
                                            </h2>
                                            <AccordionPanel pb={4}>
                                                <Text>State: </Text>
                                                <Select defaultValue={'All'} width={"100%"} padding={2} onChange={(e) => { setState(e.target.value) }}>
                                                    <option value='All'>All</option>
                                                    {states.map(e => {
                                                        return <option value={e}>{e}</option>
                                                    })}
                                                </Select>
                                                <Text>Sector: </Text>
                                                <Select defaultValue={'All'} width={"100%"} padding={2} onChange={(e) => { setSector(e.target.value); console.log(e.target.value) }}>
                                                    <option value='All'>All</option>
                                                    {sectors.map(e => {
                                                        return <option value={e}>{e}</option>
                                                    })}
                                                </Select>
                                                <Button onClick={() => { handleFilter() }}>Apply Filter</Button>
                                            </AccordionPanel>
                                        </AccordionItem>
                                    </Accordion>
                                    <Text marginLeft={'4%'}>{filter_data.length} Result(s)</Text>
                                    </Box>
                                        <InputGroup width={'40%'} display={{ base: 'none', md: 'flex' }}>
                                            <InputLeftElement pointerEvents='none'>
                                                <FiSearch color='gray.300' />
                                            </InputLeftElement>
                                            <Input type='text' placeholder='Search' marginRight={'3%'} onChange={(e) => searchData(e.target.value)}/>
                                        </InputGroup>
                                </Box>
                                <STable data={filter_data} />
                            </Box>
                        </TabPanel>
                        <TabPanel>
                            <YearwiseTable />
                        </TabPanel>
                        <TabPanel>
                            <StatewiseTable />
                        </TabPanel>
                    </TabPanels>
                </Tabs></Box>
                <Footer />
            </main>
        </>
    )
}
